Promises

only single value it will emit 

not lazy(means we dont need to subscribe it)

we can never destroy a promise

.then -> resolve , .catch --> reject
async  ==>  await --> try --> resolve , catch --> reject 

syntax :
 aPromise : Promise<any> = new Promise((resolve,reject)=>{}

Observables

it emits multiple values over a period of time
they are lazy , we have to subscribe it then only it will be executed 
we can destroy observables



OPERATORS IN RxJs

1.interval
this.obs = interval(1000)

2.filtering
filter 

pipe === filter 


pipe()

this.sub3 = this.obs.pipe(first(
    x => x==2
)).subscribe(res=>clg(res))


first 
skip(2)
takeLast(2
)

3.Map

* transform values 
* widely use 
* x : 1 2 3 
o/p  1 4 9 
(n)^2


data : 1 2 3 4 5 6 7 

1. i need first 3 values
.pipe(firstthree)  ==> 1 2 3
this.observable.pipe.map(x => x*x).subscribe()

this.obs.pipe(map(x=> x*x))